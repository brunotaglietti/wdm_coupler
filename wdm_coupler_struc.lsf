deleteall;

## Adds the top SWG bus

N = round(Lc/Lambda);
x_span_rounded = Lambda*N;
x=linspace(-x_span_rounded/2,x_span_rounded/2,N+1);

for(i=1:N+1) {
  addrect;
  set("x", x(i));
  set("name","top SWG " + num2str(i));
  set("x span",a);
  set("y", g/2 + ws2/2);
  set("y span", ws2);
  set("z span", thickness);
  set("material", Core_Material);
  if(get("material")=="<Object defined dielectric>")
    { set("index",3.4764); }
  set("override mesh order from material database",1);
  set("mesh order",1);
}

## Adds the bottom SWG bus

for(i=1:N+1) {
  addrect;
  set("x", x(i));
  set("name","Bottom SWG " + num2str(i));
  set("x span", a);
  set("y", -g/2 - ws/2);
  set("y span", ws);
  set("z span", thickness);
  set("material", Core_Material);
  if(get("material")=="<Object defined dielectric>")
    { set("index",3.4764); }
  set("override mesh order from material database",1);
  set("mesh order",1);
}

## Adds the forward facing taper
# Adding the tapering down Si waveguide

x0 = -Lc/2 - Lt/2;
y0 = -g/2 - ws/2;
z0 = 0;

width_end = 0;
V=matrix(4,2);
V(1,1:2)=[-Lt/2 - a/2, - wi/2];
V(2,1:2)=[-Lt/2 - a/2, wi/2];
V(3,1:2)=[Lt/2, width_end/2];
V(4,1:2)=[Lt/2, -width_end/2];

addpoly;
set("name", "Si taper - Input");
set("x", x0);
set("y", y0);
set("z", z0);
set("z span",thickness);
set("vertices",V);
set("material", Core_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",1);
set("mesh order",1);

# Ads the overwritting dioxide triangle at the bottom of the taper

V(1,1:2)=[-Lt/2 - a/2, 0];
V(2,1:2)=[-Lt/2 - a/2, (ws - wi)/2];
V(3,1:2)=[Lt/2, width_end/2];
V(4,1:2)=[Lt/2, -width_end/2];

addpoly;
set("name", "SiO2 Taper - Input Bottom");
set("x", x0);
set("y", y0 - ws/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material",Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Ads the overwritting dioxide triangle at the top of the taper

V(1,1:2)=[-Lt/2 - a/2, -(ws - wi)/2];
V(2,1:2)=[-Lt/2 - a/2, 0];
V(3,1:2)=[Lt/2, width_end/2];
V(4,1:2)=[Lt/2, -width_end/2];

addpoly;
set("name", "SiO2 Taper - Input Top");
set("x", x0);
set("y", y0 + ws/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material", Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Adds the taper SWG

N = round(Lt/Lambda);
x_span_rounded = Lambda*N;
xi = x0 + linspace(-x_span_rounded/2,x_span_rounded/2,N+1);

for(i=1:N){
    addrect;
    set("x", xi(i));
    set("name", "Input taper SWG " + num2str(i));
    set("x span", a);
    set("y", y0);
    set("y span", ws);
    set("z span", thickness);
    set("material", Core_Material);
    if(get("material")=="<Object defined dielectric>"){
        set("index",index_bragg);
    }
    set("override mesh order from material database",1);
    set("mesh order",3);
}

## Adds the Bottom output Taper
# Adding the Si tapering up waveguide

x0 = Lc/2 + Lt/2;
y0 = -g/2 - ws/2;
z0 = 0;

width_end = 0;
V=matrix(4,2);
V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, wi/2];
V(4,1:2) = [Lt/2, - wi/2];

addpoly;
set("name", "Si taper - output 2");
set("x", x0);
set("y", y0);
set("z", z0);
set("z span", thickness);
set("vertices", V);
set("material", Core_Material);
if(get("material") == "<Object defined dielectric>"){
    set("index", index);
}
set("override mesh order from material database", 1);
set("mesh order", 1);

# Ads the overwritting dioxide triangle at the bottom of the taper

V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, 0];
V(4,1:2) = [Lt/2, (ws - wi)/2];

addpoly;
set("name", "SiO2 Taper - Output 2 Bottom");
set("x", x0);
set("y", y0 - ws/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material",Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Ads the overwritting dioxide triangle at the top of the taper

V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, -(ws - wi)/2];
V(4,1:2) = [Lt/2, 0];

addpoly;
set("name", "SiO2 Taper - Output 2 Top");
set("x", x0);
set("y", y0 + ws/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material", Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Adds the taper SWG
N = round(Lt/Lambda);
x_span_rounded = Lambda*N;
xi = x0 + linspace(-x_span_rounded/2,x_span_rounded/2,N+1);

for(i=2:N){
    addrect;
    set("x",xi(i));
    set("name", "Output 2 taper SWG " + num2str(i));
    set("x span", a);
    set("y", y0);
    set("y span", ws);
    set("z span", thickness);
    set("material", Core_Material);
    if(get("material")=="<Object defined dielectric>"){
        set("index",index_bragg);
    }
    set("override mesh order from material database",1);
    set("mesh order",3);
}

## Adds the Top output Taper
# Adding the Si tapering up waveguide

x0 = Lc/2 + Lt/2;
y0 = g/2 + ws2/2;
z0 = 0;

width_end = 0;
V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, wi/2];
V(4,1:2) = [Lt/2, - wi/2];

addpoly;
set("name", "Si taper - output 1");
set("x", x0);
set("y", y0);
set("z", z0);
set("z span",thickness);
set("vertices",V);
set("material", Core_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",1);
set("mesh order",1);

# Ads the overwritting dioxide triangle at the bottom of the taper

V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, 0];
V(4,1:2) = [Lt/2, (ws2 - wi)/2];

addpoly;
set("name", "SiO2 Taper - Output 1 Bottom");
set("x", x0);
set("y", y0 - ws2/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material",Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Ads the overwritting dioxide triangle at the top of the taper

V(1,1:2) = [-Lt/2 - a/2, width_end/2];
V(2,1:2) = [-Lt/2 - a/2, -width_end/2];
V(3,1:2) = [Lt/2, -(ws2 - wi)/2];
V(4,1:2) = [Lt/2, 0];

addpoly;
set("name", "SiO2 Taper - Output 1 Top");
set("x", x0);
set("y", y0 + ws2/2);
set("z", z0);
set("z span", thickness);
set("vertices",V);
set("material", Box_Material);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# Adds the taper SWG
?N = round(Lt/Lambda);
?x_span_rounded = Lambda*N;
xi = x0 + linspace(-x_span_rounded/2,x_span_rounded/2,N+1);

for(i=2:N){
    addrect;
    set("x",xi(i));
    set("name", "Output 1 taper SWG " + num2str(i));
    set("x span", a);
    set("y", y0);
    set("y span", ws2);
    set("z span", thickness);
    set("material", Core_Material);
    if(get("material")=="<Object defined dielectric>"){
        set("index",index_bragg);
    }
    set("override mesh order from material database",1);
    set("mesh order",3);
}

# ## Adds the top s-bend waveguide

x0 = Lc/2 + Lt;
y0 = g/2 + ws2/2;
z0 = 0;

addwaveguide;
set("name", "Top S-bend");
set("x", x0);
set("y", y0);
set("z", z0);
set("detail", 0.5);
set("material", Core_Material);
set("base angle", 90);
set("base height", thickness);
set("base width", wi);
# select("Top S-bend");
set("poles",[0,0; Lb/2,0; Lb/2, (Lb - ws2 - g)/2; Lb, (Lb - ws2 - g)/2]);

## Adds the bottom s-bend waveguide

x0 = Lc/2 + Lt;
y0 = -g/2 - ws/2;
z0 = 0;

addwaveguide;
set("name", "Bottom S-bend");
set("x", x0);
set("y", y0);
set("z", z0);
set("detail", 0.5);
set("material", Core_Material);
set("base angle", 90);
set("base height", thickness);
set("base width", wi);
# select("Top S-bend");
set("poles",[0,0; Lb/2,0; Lb/2, -(Lb - ws - g)/2; Lb, -(Lb - ws - g)/2]);

## Adds input waveguide
addrect;
set('name', 'Input waveguide');
set('material', Core_Material);
set('x min', -substrate_length/2);
set('x max', -(Lc/2 + Lt));
set('y min', -(g + ws + wi)/2);
set('y max', -(g + ws - wi)/2);
set('z', 0); set('z span', thickness);

## Adds top output waveguide
addrect;
set('name', 'Top output waveguide');
set('material', Core_Material);
set('x min', Lc/2 + Lt + Lb);
set('x max', substrate_length/2);
set('y', Lb/2);
set('y span', wi);
set('z', 0); set('z span', thickness);

## Adds bottom output waveguide
addrect;
set('name', 'Bottom output waveguide');
set('material', Core_Material);
set('x min', Lc/2 + Lt + Lb);
set('x max', substrate_length/2);
set('y', -Lb/2);
set('y span', wi);
set('z', 0); set('z span', thickness);
