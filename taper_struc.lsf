deleteall;
##############################################
# Isosceles trapezoid
# An extruded isosceles trapezoid that is symmetric
# about its vertical center line.
#
# Input properties
# index: index of refraction for dielectric
# material: material of object
# z span: thickness of extrusion
# y span: vertical length of trapezoid
# lx top: top length of trapezoid
# lx base: base length of the trapezoid
#
# Tags: polygon extrusion isosceles trapezoid
#
# Copyright 2010 Lumerical Solutions Inc
##############################################
# simplify variable names by removing spaces

taper_h = %thickness%;
taper_l = %taper length%;
wg_w = %standard width%;
width_end = 0;
swg_w = %SWG width%;
swg_period = %SWG period%;

V=matrix(4,2);

V(1,1:2)=[-taper_l/2,-wg_w/2];
V(2,1:2)=[-taper_l/2,wg_w/2];
V(3,1:2)=[taper_l/2,width_end/2];
V(4,1:2)=[taper_l/2,-width_end/2];

addpoly;
set("name", "Si tapered down");
set("x",0);
set("y",0);
set("z",0);
set("z span",taper_h);
set("vertices",V);
set("material", %core material%);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",1);
set("mesh order",1);

V(1,1:2)=[-taper_l/2, -(swg_w - wg_w)/2];
V(2,1:2)=[-taper_l/2, (swg_w - wg_w)/2];
V(3,1:2)=[taper_l/2, width_end/2];
V(4,1:2)=[taper_l/2, -width_end/2];

addpoly;
set("name", "SiO2 Tapering SWG - Bottom");
set("x",0);
set("y", -swg_w/2);
set("z",0);
set("z span", taper_h);
set("vertices",V);
set("material",%box material%);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

addpoly;
set("name", "SiO2 Tapering SWG - Top");
set("x",0);
set("y", swg_w/2);
set("z",0);
set("z span", taper_h);
set("vertices",V);
set("material",%box material%);
if(get("material")=="<Object defined dielectric>"){
    set("index",index);
}
set("override mesh order from material database",2);
set("mesh order",2);

# add core
N = round(taper_l/swg_period);
x_span_rounded = swg_period*N;
x = linspace(-x_span_rounded/2,x_span_rounded/2,N+1);

for(i=1:N+1){
    addrect;
    set("x",x(i));
    set("name", "bragg " + num2str(i));
    set("x span", %x span bragg%);
    set("y span", swg_w);
    set("z span", thickness);
    set("material", %core material%);
    if(get("material")=="<Object defined dielectric>"){
        set("index",index_bragg);
    }
    set("override mesh order from material database",1);
    set("mesh order",3);
}
