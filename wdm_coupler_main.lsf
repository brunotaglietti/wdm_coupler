## SWG-Based WDM Coupler/Splitter

# Resets the lumerical layout before running
newproject; redrawoff;
filename = "wdm";
save(filename);

wl0 = 1550e-9;

# Sets up the analysis scripts for figure of merit
setnamed("::model", "analysis script",'
tx1 = getresult("P1", "T");
T1 = spline(tx1.T, tx1.lambda, lambda_0);
tx2 = getresult("P2", "T");
T2 = spline(tx2.T, tx2.lambda, lambda_0);
');
setnamed("::model::");
addanalysisprop("lambda_0", 0, wl0);
addanalysisresult("T1");
addanalysisresult("T2");

# Parameter values
Clad_Material = 'SiO2 (Glass) - Palik';
Box_Material = 'SiO2 (Glass) - Palik';
Core_Material = 'Si (Silicon) - Palik';
wi = 500e-9;
Lc = 40e-6;
Lt = 6e-6;
Lb = 10e-6;
ws = 1.5e-6;
Lambda = 200e-9;
a = 100e-9;
t = 100e-9;
thickness = 220e-9;

substrate_length = 100e-6;
substrate_width = 30e-6;

# Sets the fundamental parameters as model variables. This way, Solvers can be repositioned as a function of the device's parameters, and sweeps can be performed more freely/broadly.
# setnamed("::model::", "use relative coordinates", 0);
# adduserprop("Clad_Material", 5, Clad_Material);
# adduserprop("Box_Material", 5, Box_Material);
# adduserprop("Core_Material", 5, Core_Material);
# adduserprop("substrate_length", 2, 100e-6);
# adduserprop("substrate_width", 2, 30e-6);
# adduserprop("wi", 2, wi);
# adduserprop("Lc", 2, Lc);
# adduserprop("Lt", 2, Lt);
# adduserprop("Lb", 2, Lb);
# adduserprop("ws", 2, ws);
# adduserprop("Lambda", 2, Lambda);
# adduserprop("a", 2, a);
# adduserprop("t", 2, t);
# adduserprop("thickness", 2, thickness);
# adduserprop("wl0", 0, wl0);
# setnamed("::model::", "setup script", read("wdm_coupler_layout.lsf"));
wdm_coupler_layout;


# Sweeping parameters
Lc_sweep = linspace(20e-6, 40e-6, 41);
wl_sweep = [1550e-9, 1310e-9];
T1 = matrix(length(wl_sweep), length(Lc_sweep));
T2 = matrix(length(wl_sweep), length(Lc_sweep));

for(i = 1:length(wl_sweep)){
    for(j = 1:length(Lc_sweep)){
        # Resets the parameters to the current iteration
        switchtolayout;
        setnamed("::model::source", "center wavelength", wl_sweep(i));
        setnamed("::model::source", "wavelength span", 1e-9);
        setnamed("::model::", "lambda_0", wl_sweep(i));
        setnamed("::model::WDM Coupler", "Lc", Lc_sweep(j));

        # Runs the simulation and grabs results
        run;
        runanalysis;
        T1(i,j) = getresult("::model::", "T1");
        T2(i,j) = getresult("::model::", "T2");

        # Prints progress
        ?num2str(((i-1)*length(Lc_sweep) + j)/(length(wl_sweep)*length(Lc_sweep))*100) + '%';
    }
}
